{"version":3,"sources":["webpack:///src/containers/manage/manageDetail/document.vue","webpack:///./src/containers/manage/manageDetail/document.vue?cb85","webpack:///./src/containers/manage/manageDetail/document.vue"],"names":["manage_manageDetail_document","render","this","$createElement","_self","_c","_m","staticRenderFns","_vm","_h","staticClass","_v","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"6HAyBA,ICtBAA,GADiBC,OAFjB,WAA0BC,KAAaC,eAAbD,KAAuCE,MAAAC,GAAwB,OAA/DH,KAA+DI,GAAA,IAExEC,iBADjB,WAAoC,IAAAC,EAAAN,KAAaO,EAAAD,EAAAL,eAA0BE,EAAAG,EAAAJ,MAAAC,IAAAI,EAAwB,OAAAJ,EAAA,OAAAA,EAAA,OAA2BK,YAAA,QAAkBL,EAAA,MAAAG,EAAAG,GAAA,UAAAH,EAAAG,GAAA,KAAAN,EAAA,WAAAA,EAAA,MAAAG,EAAAG,GAAA,gBAAAH,EAAAG,GAAA,KAAAN,EAAA,KAA0GK,YAAA,aAAuBF,EAAAG,GAAA,2BAAAH,EAAAG,GAAA,KAAAN,EAAA,MAAAG,EAAAG,GAAA,QAAAH,EAAAG,GAAA,KAAAN,EAAA,KAAAG,EAAAG,GAAA,kFAAAH,EAAAG,GAAA,KAAAN,EAAA,KAAAG,EAAAG,GAAA,wSAAAH,EAAAG,GAAA,KAAAN,EAAA,MAAAG,EAAAG,GAAA,QAAAH,EAAAG,GAAA,KAAAN,EAAA,KAAAG,EAAAG,GAAA,sVAAAH,EAAAG,GAAA,KAAAN,EAAA,KAAAG,EAAAG,GAAA,yNCEjR,IAcAC,EAdAC,EAAA,OAcAC,6BAEAd,GATA,EAVA,SAAAe,GACAF,EAAA,SAaA,kBAEA,MAUAG,EAAA,QAAAJ,EAAA","file":"static/js/19.553a2f30d3e3eb6c7adc.js","sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"doc\">\r\n            <h3>使用说明</h3>\r\n            <article>\r\n                <h1>中行直播后台管理系统</h1>\r\n                <p class=\"subtitle\">本系统由Vue和stylus技术栈联手打造</p>\r\n                <h2>摘要</h2>\r\n                <p>和HTTP/1.0相比，HTTP/1.1 新增了以下内容：默认为长连接；提供了范围请求功能；提供了虚拟主机的功能；多了一些缓存处理字段；多了一些状态码。</p>\r\n                <p>和HTTP/1.1相比，HTTP/2.0 新增了以下内容：HTTP/2.0 使用多路复用技术，使用同一个 TCP 连接来处理多个请求；HTTP/1.1 的首部带有大量信息，而且每次都要重复发送。HTTP/2.0 要求通讯双方各自缓存一份首部字段表，从而避免了重复传输；\r\n                  在客户端请求一个资源时，会把相关的资源一起发送给客户端，客户端就不需要再次发起请求了。例如客户端请求 index.html 页面，服务端就把 index.js 一起发给客户端。HTTP/1.1 的解析是基于文本的，而 HTTP/2.0 采用二进制格式。\r\n                </p>\r\n                <h2>说明</h2>\r\n                <p>持久连接需要使用 Connection 首部字段进行管理。HTTP/1.1 开始 HTTP 默认是持久化连接的，如果要断开 TCP 连接，需要由客户端或者服务器端提出断开，使用 Connection : close；而在 HTTP/1.1 之前默认是非持久化连接的，如果要维持持续连接，需要使用 Connection : Keep-Alive。\r\n                  管线化方式 可以同时发送多个请求和响应，而不需要发送一个请求然后等待响应之后再发下一个请求。编码（Encoding）主要是为了对实体进行压缩。常用的编码有：gzip、compress、deflate、identity，其中 identity 表示不执行压缩的编码格式。\r\n                </p>\r\n                <p>在请求报文首部中添加 Range 字段，然后指定请求的范围，例如 Range:bytes=5001-10000。请求成功的话服务器发送 206 Partial Content 状态。通过内容协商返回最合适的内容，例如根据浏览器的默认语言选择返回中文界面还是英文界面。\r\n                  使用虚拟主机技术，使得一台服务器拥有多个域名，并且在逻辑上可以看成多个服务器。\r\n                </p>\r\n            </article>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        data: function(){\r\n            return {}\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n     .doc{\r\n        width:80vw;\r\n        max-width: 980px;\r\n        font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Helvetica, Arial, sans-serif;\r\n        margin:0 auto\r\n    }\r\n    .doc h3{\r\n        padding: 9px 10px 10px;\r\n        margin: 0;\r\n        font-size: 14px;\r\n        line-height: 17px;\r\n        background-color: #f5f5f5;\r\n        border: 1px solid #d8d8d8;\r\n        border-bottom: 0;\r\n        border-radius: 3px 3px 0 0;\r\n    }\r\n    article{\r\n        padding: 45px;\r\n        word-wrap: break-word;   /* 在长单词或 URL 地址内部进行换行。 */\r\n        background-color: #fff;\r\n        border: 1px solid #ddd;\r\n        border-bottom-right-radius: 3px;\r\n        border-bottom-left-radius: 3px;\r\n    }\r\n    article h1{\r\n        font-size:32px;\r\n        padding-top: -20px;\r\n        padding-bottom: 30px;\r\n        margin-bottom: 15px;\r\n        margin-top:-10px;\r\n        border-bottom: 1px solid #ddd;\r\n    }\r\n    article h2 {\r\n        margin: 24px 0 16px;\r\n        font-weight: 600;\r\n        line-height: 1.25;\r\n        padding-bottom: 7px;\r\n        font-size: 24px;\r\n        border-bottom: 1px solid #eee;\r\n    }\r\n    article p{\r\n        margin-bottom: 15px;\r\n        line-height: 1.5;\r\n        text-align: left;\r\n    }\r\n    .subtitle{\r\n      text-align: center;\r\n    }\r\n</style>\n\n\n// WEBPACK FOOTER //\n// src/containers/manage/manageDetail/document.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"doc\"},[_c('h3',[_vm._v(\"使用说明\")]),_vm._v(\" \"),_c('article',[_c('h1',[_vm._v(\"中行直播后台管理系统\")]),_vm._v(\" \"),_c('p',{staticClass:\"subtitle\"},[_vm._v(\"本系统由Vue和stylus技术栈联手打造\")]),_vm._v(\" \"),_c('h2',[_vm._v(\"摘要\")]),_vm._v(\" \"),_c('p',[_vm._v(\"和HTTP/1.0相比，HTTP/1.1 新增了以下内容：默认为长连接；提供了范围请求功能；提供了虚拟主机的功能；多了一些缓存处理字段；多了一些状态码。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"和HTTP/1.1相比，HTTP/2.0 新增了以下内容：HTTP/2.0 使用多路复用技术，使用同一个 TCP 连接来处理多个请求；HTTP/1.1 的首部带有大量信息，而且每次都要重复发送。HTTP/2.0 要求通讯双方各自缓存一份首部字段表，从而避免了重复传输；\\n              在客户端请求一个资源时，会把相关的资源一起发送给客户端，客户端就不需要再次发起请求了。例如客户端请求 index.html 页面，服务端就把 index.js 一起发给客户端。HTTP/1.1 的解析是基于文本的，而 HTTP/2.0 采用二进制格式。\\n            \")]),_vm._v(\" \"),_c('h2',[_vm._v(\"说明\")]),_vm._v(\" \"),_c('p',[_vm._v(\"持久连接需要使用 Connection 首部字段进行管理。HTTP/1.1 开始 HTTP 默认是持久化连接的，如果要断开 TCP 连接，需要由客户端或者服务器端提出断开，使用 Connection : close；而在 HTTP/1.1 之前默认是非持久化连接的，如果要维持持续连接，需要使用 Connection : Keep-Alive。\\n              管线化方式 可以同时发送多个请求和响应，而不需要发送一个请求然后等待响应之后再发下一个请求。编码（Encoding）主要是为了对实体进行压缩。常用的编码有：gzip、compress、deflate、identity，其中 identity 表示不执行压缩的编码格式。\\n            \")]),_vm._v(\" \"),_c('p',[_vm._v(\"在请求报文首部中添加 Range 字段，然后指定请求的范围，例如 Range:bytes=5001-10000。请求成功的话服务器发送 206 Partial Content 状态。通过内容协商返回最合适的内容，例如根据浏览器的默认语言选择返回中文界面还是英文界面。\\n              使用虚拟主机技术，使得一台服务器拥有多个域名，并且在逻辑上可以看成多个服务器。\\n            \")])])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.1@vue-loader/lib/template-compiler?{\"id\":\"data-v-efe8b54e\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.1@vue-loader/lib/selector.js?type=template&index=0!./src/containers/manage/manageDetail/document.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/_extract-text-webpack-plugin@3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/_vue-loader@13.7.1@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-efe8b54e\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../node_modules/_vue-loader@13.7.1@vue-loader/lib/selector?type=styles&index=0!./document.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/_vue-loader@13.7.1@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/_vue-loader@13.7.1@vue-loader/lib/selector?type=script&index=0!./document.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/_vue-loader@13.7.1@vue-loader/lib/selector?type=script&index=0!./document.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/_vue-loader@13.7.1@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-efe8b54e\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/_vue-loader@13.7.1@vue-loader/lib/selector?type=template&index=0!./document.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-efe8b54e\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/containers/manage/manageDetail/document.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}